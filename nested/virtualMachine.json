{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "globals": {
            "type": "object",
            "metadata": {
                "Description": "Global complex object passed to nested templates"
            }
        },
        "machineSettings": {
            "metadata": {
                "Description": "Machine settings object"
            },
            "type": "object"
        },
        "adminPassword": {
            "metadata": {
                "Description": "Administrator password for the VM"
            },
            "type": "securestring"
        },
        "domainAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Domain admin password"
            }
        },
        "copyIndexOffset": {
            "metadata": {
                "Description": "Number to start copy index from"
            },
            "type": "int",
            "defaultValue": 1,
            "minValue": 1
        }
    },
    "variables": {
        "keyVaultURL": "[concat('https://', parameters('globals').diskEncryption.keyVaultName, '.vault.azure.net/')]",
        "keyVaultResourceId": "[resourceId(parameters('globals').diskEncryption.keyVaultResourceGroup, 'Microsoft.KeyVault/vaults', parameters('globals').diskEncryption.keyVaultName)]",
        "asName": "[toUpper(concat('as', parameters('globals').basename, '-', parameters('globals').environment.shortname, '-', parameters('machineSettings').appID))]",
        "nicName": "[variables(concat('nicName', parameters('globals').networkSettings.nicNamingVersion))]",
        "nicName1": "[toLower(concat('nic', parameters('machineSettings').basename))]",
        "nicName2": "[toLower(concat('nic', parameters('globals').environment.shortname, '-vm', parameters('machineSettings').basename))]",
        "pipName": "[toLower(concat('pip', parameters('machineSettings').basename))]",
        "vmName": "[parameters('machineSettings').basename]",
        "vmNamePortal": "[concat('vm', parameters('machineSettings').basename)]"
    },
    "resources": [
        {
            "apiVersion": "[parameters('globals').apiVersion.nic]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('machineSettings').numberOfVMs]"
            },
            "properties": {
                "ipConfigurations": "[parameters('machineSettings').ipConfigurations]",
                "dnsSettings": {
                    "dnsServers": "[parameters('machineSettings').dnsServers]"
                }
            }
        },
        {
            "name": "[concat(variables('pipName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]",
            "condition": "[equals(parameters('machineSettings').publicIPTemplateLink, parameters('globals').templateLinkPublicIP)]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[parameters('globals').apiVersion.deployment]",
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('machineSettings').numberOfVMs]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[parameters('machineSettings').publicIPTemplateLink]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apiVersionPIP": {
                        "value": "[parameters('globals').apiVersion.pip]"
                    },
                    "apiVersionNIC": {
                        "value": "[parameters('globals').apiVersion.nic]"
                    },
                    "pipName": {
                        "value": "[concat(variables('pipName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]"
                    },
                    "nicName": {
                        "value": "[concat(variables('nicName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]"
                    },
                    "dnsPrefix": {
                        "value": "[concat(variables('vmName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]"
                    },
                    "ipConfigurations": {
                        "value": "[parameters('machineSettings').ipConfigurations]"
                    },
                    "dnsServers": {
                        "value": "[parameters('machineSettings').dnsServers]"
                    }
                }
            }
        },
        {
            "apiVersion": "[parameters('globals').apiVersion.availabilitySets]",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('asName')]",
            "location": "[resourceGroup().location]"
        },
        {
            "name": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]",
            "condition": "[equals(parameters('globals').vmRebuild, 'false')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[parameters('globals').apiVersion.deployment]",
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('machineSettings').numberOfVMs]"
            },
            "dependsOn": [
                "[concat(variables('pipName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]",
                "[variables('asName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[parameters('globals').templateLinkVMNew]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "globals": {
                        "value": "[parameters('globals')]"
                    },
                    "vmName": {
                        "value": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]"
                    },
                    "availabilitySet": {
                        "value": {
                            "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('asName'))]"
                        }
                    },
                    "hardwareProfile": {
                        "value": {
                            "vmSize": "[parameters('machineSettings').imageReference.size]"
                        }
                    },
                    "osProfile": {
                        "value": {
                            "computerName": "[concat(variables('vmName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]",
                            "adminUsername": "[parameters('machineSettings').adminUsername]",
                            "adminPassword": "[parameters('adminPassword')]",
                            "secrets": [
                                {
                                    "sourceVault": {
                                        "id": "[variables('keyVaultResourceId')]"
                                    },
                                    "vaultCertificates": [
                                        {
                                            "certificateUrl": "[parameters('globals').diskEncryption.keyVaultCertificateURL]",
                                            "certificateStore": "My"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "storageProfile": {
                        "value": {
                            "imageReference": {
                                "publisher": "[parameters('machineSettings').imageReference.publisher]",
                                "offer": "[parameters('machineSettings').imageReference.offer]",
                                "sku": "[parameters('machineSettings').imageReference.sku]",
                                "version": "[parameters('machineSettings').imageReference.version]"
                            },
                            "osDisk": {
                                "name": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]",
                                "vhd": {
                                    "uri": "[concat('http://', parameters('machineSettings').storageAccount, '.blob.core.windows.net/', parameters('globals').vhdContainerName, '/', concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0')),'-OS.vhd')]"
                                },
                                "caching": "ReadWrite",
                                "createOption": "FromImage"
                            }
                        }
                    },
                    "networkProfile": {
                        "value": {
                            "networkInterfaces": [
                                {
                                    "id": "[resourceId('Microsoft.Network/networkInterfaces/', concat(variables('nicName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0')))]"
                                }
                            ]
                        }
                    },
                    "diagnosticsProfile": {
                        "value": {
                            "bootDiagnostics": {
                                "enabled": "true",
                                "storageUri": "[concat('http://', parameters('globals').storageAccountDiagnostics, '.blob.core.windows.net')]"
                            }
                        }
                    },
                    "plan": {
                        "value": "[parameters('machineSettings').plan]"
                    }
                }
            }
        },
        {
            "name": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'), '-Rebuild')]",
            "condition": "[equals(parameters('globals').vmRebuild, 'true')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[parameters('globals').apiVersion.deployment]",
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('machineSettings').numberOfVMs]"
            },
            "dependsOn": [
                "[concat(variables('pipName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]",
                "[variables('asName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[parameters('globals').templateLinkVMRebuild]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "globals": {
                        "value": "[parameters('globals')]"
                    },
                    "vmName": {
                        "value": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]"
                    },
                    "availabilitySet": {
                        "value": {
                            "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('asName'))]"
                        }
                    },
                    "hardwareProfile": {
                        "value": {
                            "vmSize": "[parameters('machineSettings').imageReference.size]"
                        }
                    },
                    "storageProfile": {
                        "value": {
                            "osDisk": {
                                "name": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]",
                                "osType": "Windows",
                                "vhd": {
                                    "uri": "[concat('http://', parameters('machineSettings').storageAccount, '.blob.core.windows.net/', parameters('globals').vhdContainerName, '/', concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0')),'-OS.vhd')]"
                                },
                                "caching": "ReadWrite",
                                "createOption": "Attach"
                            }
                        }
                    },
                    "networkProfile": {
                        "value": {
                            "networkInterfaces": [
                                {
                                    "id": "[resourceId('Microsoft.Network/networkInterfaces/', concat(variables('nicName'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0')))]"
                                }
                            ]
                        }
                    },
                    "diagnosticsProfile": {
                        "value": {
                            "bootDiagnostics": {
                                "enabled": "true",
                                "storageUri": "[concat('http://', parameters('globals').storageAccountDiagnostics, '.blob.core.windows.net')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'), '-DataDisk')]",
            "apiVersion": "[parameters('globals').apiVersion.deployment]",
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('machineSettings').numberOfVMs]"
            },
            "dependsOn": [
                "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]",
                "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'), '-Rebuild')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[parameters('machineSettings').dataDiskTemplateLink]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "globals": {
                        "value": "[parameters('globals')]"
                    },
                    "vmName": {
                        "value": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]"
                    },
                    "machineSettings": {
                        "value": "[parameters('machineSettings')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'), '-Extensions')]",
            "apiVersion": "[parameters('globals').apiVersion.deployment]",
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('machineSettings').numberOfVMs]"
            },
            "dependsOn": [
                "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'), '-DataDisk')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[parameters('globals').templateLinkExtensions]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "globals": {
                        "value": "[parameters('globals')]"
                    },
                    "vmName": {
                        "value": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]"
                    },
                    "encryptionTemplateLink": {
                        "value": "[parameters('machineSettings').encryptionTemplateLink]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'), '-SQLKeyVault')]",
            "apiVersion": "[parameters('globals').apiVersion.deployment]",
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('machineSettings').numberOfVMs]"
            },
            "dependsOn": [
                "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'), '-Extensions')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[parameters('machineSettings').sqlKeyVaultTemplateLink]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "globals": {
                        "value": "[parameters('globals')]"
                    },
                    "vmName": {
                        "value": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'), '-DomainJoin')]",
            "apiVersion": "[parameters('globals').apiVersion.deployment]",
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('machineSettings').numberOfVMs]"
            },
            "dependsOn": [
                "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'), '-SQLKeyVault')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[parameters('machineSettings').domainJoinTemplateLink]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "globals": {
                        "value": "[parameters('globals')]"
                    },
                    "vmName": {
                        "value": "[concat(variables('vmNamePortal'), padLeft(copyIndex(parameters('copyIndexOffset')), 2, '0'))]"
                    },
                    "ouPath": {
                        "value": "[parameters('machineSettings').ouPath]"
                    },
                    "domainAdminPassword": {
                        "value": "[parameters('domainAdminPassword')]"
                    }
                }
            }
        }
    ]
}
